##Patterns: E7003,E3004,E1011,E1011,E1011,E1011,E1011
##Issue: {"severity": "Error", "line": 15, "patternId": "E7003"}
##Issue: {"severity": "Error", "line": 18, "patternId": "E3004"}
##Issue: {"severity": "Error", "line": 21, "patternId": "E1011"}
##Issue: {"severity": "Error", "line": 23, "patternId": "E1011"}
##Issue: {"severity": "Error", "line": 28, "patternId": "E1011"}
##Issue: {"severity": "Error", "line": 35, "patternId": "E1011"}
##Issue: {"severity": "Error", "line": 40, "patternId": "E1011"}
---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Exclusive Property types
Mappings:
  amimap:
    us-east-1:
      32: ami-123456
Resources:
  myInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ amimap, !Ref "AWS::Region", !GetAtt myInstance.AvailabilityZone ]
      SubnetId:
        Fn::FindInMap:
          MapName: subnetmap
          TopLevelKey: !Ref "AWS::Region"
          SecondLevelKey: 32
      AvailabilityZone:
        Fn::FindInMap:
          - azmap
          - !Ref "AWS::Region"
          - 0
  myInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ !FindInMap [ myMapDne, !Ref 'AWS::Region', !Ref 'AWS::Region' ], !Ref 'AWS::Region', 32 ]
  myInstance3:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - Ref: myInstance
          Fn::FindInMap: [ amimap, !Ref 'AWS::Region', !Ref 'AWS::Region' ]
        - TopLevelKey
        - SecondLevelKey
